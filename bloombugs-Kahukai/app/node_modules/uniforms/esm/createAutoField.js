import invariant from 'invariant';
import { createContext, createElement, useContext, } from 'react';
import { useField } from './useField';
export function createAutoField(defaultComponentDetector) {
    var context = createContext(defaultComponentDetector);
    function AutoField(rawProps) {
        var _a, _b;
        var _c = useField(rawProps.name, rawProps), props = _c[0], uniforms = _c[1];
        var componentDetector = useContext(context);
        var component = (_a = props.component) !== null && _a !== void 0 ? _a : componentDetector(props, uniforms);
        invariant(component, 'AutoField received no component for: %s', props.name);
        return 'options' in component && ((_b = component.options) === null || _b === void 0 ? void 0 : _b.kind) === 'leaf'
            ? createElement(component.Component, props)
            : createElement(component, rawProps);
    }
    return Object.assign(AutoField, {
        componentDetectorContext: context,
        defaultComponentDetector: defaultComponentDetector,
    });
}
