import { __extends, __rest } from "tslib";
import React from 'react';
import { BaseForm } from './BaseForm';
export function Quick(Base) {
    // @ts-expect-error: Mixin class problem.
    var QuickForm = /** @class */ (function (_super) {
        __extends(QuickForm, _super);
        function QuickForm() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        QuickForm.prototype.getNativeFormProps = function () {
            var _a = _super.prototype.getNativeFormProps.call(this), _b = _a.autoField, AutoField = _b === void 0 ? this.getAutoField() : _b, _c = _a.errorsField, ErrorsField = _c === void 0 ? this.getErrorsField() : _c, _d = _a.submitField, SubmitField = _d === void 0 ? this.getSubmitField() : _d, props = __rest(_a, ["autoField", "errorsField", "submitField"]);
            if (!props.children) {
                props.children = this.getContextSchema()
                    .getSubfields()
                    .map(function (key) { return React.createElement(AutoField, { key: key, name: key }); })
                    .concat([
                    React.createElement(ErrorsField, { key: "$ErrorsField" }),
                    React.createElement(SubmitField, { key: "$SubmitField" }),
                ]);
            }
            return props;
        };
        QuickForm.prototype.getAutoField = function () {
            return function () { return null; };
        };
        QuickForm.prototype.getErrorsField = function () {
            return function () { return null; };
        };
        QuickForm.prototype.getSubmitField = function () {
            return function () { return null; };
        };
        QuickForm.Quick = Quick;
        QuickForm.displayName = "Quick" + Base.displayName;
        return QuickForm;
    }(Base));
    return QuickForm;
}
export var QuickForm = Quick(BaseForm);
