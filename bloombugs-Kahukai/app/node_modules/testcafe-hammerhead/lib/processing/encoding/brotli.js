"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const zlib_1 = __importDefault(require("zlib"));
const util_1 = require("util");
// NOTE: Brotli encoding support was backported to the 10.x Node.js version (starts from 10.16).
// https://github.com/nodejs/node/pull/24938
// However, we can't remove the 'brotli' module right now to not make trouble customers with versions from 10.0 to 10.15.
// We will remove the 'brotli' module after 10.x version support is ended (2021-04-30)
const hasBuiltInBrotliSupport = 'brotliCompress' in zlib_1.default;
const builtInBrotliCompress = hasBuiltInBrotliSupport ? util_1.promisify(zlib_1.default.brotliCompress) : null;
const builtInBrotliDecompress = hasBuiltInBrotliSupport ? util_1.promisify(zlib_1.default.brotliDecompress) : null;
function brotliCompress(data) {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    return builtInBrotliCompress ? builtInBrotliCompress(data) : Buffer.from(require('brotli').compress(data));
}
exports.brotliCompress = brotliCompress;
function brotliDecompress(data) {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    return builtInBrotliDecompress ? builtInBrotliDecompress(data) : Buffer.from(require('brotli').decompress(data));
}
exports.brotliDecompress = brotliDecompress;
