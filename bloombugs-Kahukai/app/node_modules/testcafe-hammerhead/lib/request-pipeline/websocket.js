"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const headerTransforms = __importStar(require("./header-transforms"));
function writeWebSocketHead(socket, destRes, headers) {
    const { httpVersion, statusCode, statusMessage } = destRes;
    const resRaw = [`HTTP/${httpVersion} ${statusCode} ${statusMessage}`];
    const headersNames = Object.keys(headers);
    for (const headerName of headersNames) {
        const headerValue = headers[headerName];
        if (Array.isArray(headerValue)) {
            for (const value of headerValue)
                resRaw.push(headerName + ': ' + value);
        }
        else
            resRaw.push(headerName + ': ' + headerValue);
    }
    resRaw.push('', '');
    socket.write(resRaw.join('\r\n'));
}
function respondOnWebSocket(ctx) {
    const headers = headerTransforms.forResponse(ctx);
    const destRes = ctx.destRes;
    writeWebSocketHead(ctx.res, destRes, headers);
    destRes.socket.pipe(ctx.res);
    ctx.res.pipe(destRes.socket);
}
exports.respondOnWebSocket = respondOnWebSocket;
