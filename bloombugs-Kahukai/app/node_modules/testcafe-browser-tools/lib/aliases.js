"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const binaries_1 = __importDefault(require("./binaries"));
const chromiumCmdArgs = [
    '--disable-infobars',
    '--disable-session-crashed-bubble',
    '--no-first-run',
    '--new-window',
    '--disable-background-networking',
    '--disable-ipc-flooding-protection',
    '--disable-background-timer-throttling',
    '--disable-backgrounding-occluded-windows',
    '--autoplay-policy=no-user-gesture-required'
].join(' ');
const edgeCmdArgs = [
    '--new-window',
    '--disable-background-timer-throttling',
    '--disable-backgrounding-occluded-windows'
].join(' ');
const ALIASES = {
    'ie': {
        nameRe: /iexplore|internet explorer/i,
        cmd: ''
    },
    'firefox': {
        nameRe: /firefox|mozilla/i,
        cmd: `-override "${path_1.default.join(__dirname, '../data/override.ini')}" -new-window`,
        macOpenCmdTemplate: 'open -a "{{{path}}}" {{{pageUrl}}} --args {{{cmd}}}',
        linuxBinaries: ['firefox']
    },
    'chrome-canary': {
        nameRe: /chrome\s*canary/i,
        cmd: chromiumCmdArgs,
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args {{{pageUrl}}} {{{cmd}}}',
        linuxBinaries: ['google-chrome-canary']
    },
    'chrome': {
        nameRe: /chrome/i,
        cmd: chromiumCmdArgs,
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args {{{pageUrl}}} {{{cmd}}}',
        linuxBinaries: ['google-chrome', 'google-chrome-stable', 'google-chrome-unstable']
    },
    'chromium': {
        nameRe: /chromium/i,
        cmd: chromiumCmdArgs,
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args {{{pageUrl}}} {{{cmd}}}',
        linuxBinaries: ['chromium-browser', 'chromium']
    },
    'opera': {
        nameRe: /opera/i,
        cmd: '--new-window',
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args {{{pageUrl}}} {{{cmd}}}',
        linuxBinaries: ['opera']
    },
    'safari': {
        nameRe: /safari/i,
        cmd: '',
        path: binaries_1.default.app,
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args /dev/null open {{{pageUrl}}} {{{cmd}}}'
    },
    'edge': {
        nameRe: /edge/i,
        cmd: edgeCmdArgs,
        macOpenCmdTemplate: 'open -n -a "{{{path}}}" --args {{{pageUrl}}} {{{cmd}}}',
        linuxBinaries: ['microsoft-edge']
    },
    'edge-legacy': {
        cmd: '',
        winOpenCmdTemplate: 'start microsoft-edge:"{{{pageUrl}}}"'
    }
};
exports.default = ALIASES;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxpYXNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9hbGlhc2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsZ0RBQXdCO0FBQ3hCLDBEQUFrQztBQUVsQyxNQUFNLGVBQWUsR0FBRztJQUNwQixvQkFBb0I7SUFDcEIsa0NBQWtDO0lBQ2xDLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsaUNBQWlDO0lBQ2pDLG1DQUFtQztJQUNuQyx1Q0FBdUM7SUFDdkMsMENBQTBDO0lBQzFDLDRDQUE0QztDQUMvQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUVaLE1BQU0sV0FBVyxHQUFHO0lBQ2hCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsMENBQTBDO0NBQzdDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRVosTUFBTSxPQUFPLEdBQUc7SUFDWixJQUFJLEVBQUU7UUFDRixNQUFNLEVBQUUsNkJBQTZCO1FBQ3JDLEdBQUcsRUFBSyxFQUFFO0tBQ2I7SUFFRCxTQUFTLEVBQUU7UUFDUCxNQUFNLEVBQWMsa0JBQWtCO1FBQ3RDLEdBQUcsRUFBaUIsY0FBYyxjQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxzQkFBc0IsQ0FBQyxlQUFlO1FBQzdGLGtCQUFrQixFQUFFLHFEQUFxRDtRQUN6RSxhQUFhLEVBQU8sQ0FBQyxTQUFTLENBQUM7S0FDbEM7SUFFRCxlQUFlLEVBQUU7UUFDYixNQUFNLEVBQWMsa0JBQWtCO1FBQ3RDLEdBQUcsRUFBaUIsZUFBZTtRQUNuQyxrQkFBa0IsRUFBRSx3REFBd0Q7UUFDNUUsYUFBYSxFQUFPLENBQUMsc0JBQXNCLENBQUM7S0FDL0M7SUFFRCxRQUFRLEVBQUU7UUFDTixNQUFNLEVBQWMsU0FBUztRQUM3QixHQUFHLEVBQWlCLGVBQWU7UUFDbkMsa0JBQWtCLEVBQUUsd0RBQXdEO1FBQzVFLGFBQWEsRUFBTyxDQUFDLGVBQWUsRUFBRSxzQkFBc0IsRUFBRSx3QkFBd0IsQ0FBQztLQUMxRjtJQUVELFVBQVUsRUFBRTtRQUNSLE1BQU0sRUFBYyxXQUFXO1FBQy9CLEdBQUcsRUFBaUIsZUFBZTtRQUNuQyxrQkFBa0IsRUFBRSx3REFBd0Q7UUFDNUUsYUFBYSxFQUFPLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxDQUFDO0tBQ3ZEO0lBRUQsT0FBTyxFQUFFO1FBQ0wsTUFBTSxFQUFjLFFBQVE7UUFDNUIsR0FBRyxFQUFpQixjQUFjO1FBQ2xDLGtCQUFrQixFQUFFLHdEQUF3RDtRQUM1RSxhQUFhLEVBQU8sQ0FBQyxPQUFPLENBQUM7S0FDaEM7SUFFRCxRQUFRLEVBQUU7UUFDTixNQUFNLEVBQWMsU0FBUztRQUM3QixHQUFHLEVBQWlCLEVBQUU7UUFDdEIsSUFBSSxFQUFnQixrQkFBUSxDQUFDLEdBQUc7UUFDaEMsa0JBQWtCLEVBQUUsdUVBQXVFO0tBQzlGO0lBRUQsTUFBTSxFQUFFO1FBQ0osTUFBTSxFQUFjLE9BQU87UUFDM0IsR0FBRyxFQUFpQixXQUFXO1FBQy9CLGtCQUFrQixFQUFFLHdEQUF3RDtRQUM1RSxhQUFhLEVBQU8sQ0FBQyxnQkFBZ0IsQ0FBQztLQUN6QztJQUVELGFBQWEsRUFBRTtRQUNYLEdBQUcsRUFBaUIsRUFBRTtRQUN0QixrQkFBa0IsRUFBRSxzQ0FBc0M7S0FDN0Q7Q0FDSixDQUFDO0FBRUYsa0JBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgQklOQVJJRVMgZnJvbSAnLi9iaW5hcmllcyc7XG5cbmNvbnN0IGNocm9taXVtQ21kQXJncyA9IFtcbiAgICAnLS1kaXNhYmxlLWluZm9iYXJzJyxcbiAgICAnLS1kaXNhYmxlLXNlc3Npb24tY3Jhc2hlZC1idWJibGUnLFxuICAgICctLW5vLWZpcnN0LXJ1bicsXG4gICAgJy0tbmV3LXdpbmRvdycsXG4gICAgJy0tZGlzYWJsZS1iYWNrZ3JvdW5kLW5ldHdvcmtpbmcnLFxuICAgICctLWRpc2FibGUtaXBjLWZsb29kaW5nLXByb3RlY3Rpb24nLFxuICAgICctLWRpc2FibGUtYmFja2dyb3VuZC10aW1lci10aHJvdHRsaW5nJyxcbiAgICAnLS1kaXNhYmxlLWJhY2tncm91bmRpbmctb2NjbHVkZWQtd2luZG93cycsXG4gICAgJy0tYXV0b3BsYXktcG9saWN5PW5vLXVzZXItZ2VzdHVyZS1yZXF1aXJlZCdcbl0uam9pbignICcpO1xuXG5jb25zdCBlZGdlQ21kQXJncyA9IFtcbiAgICAnLS1uZXctd2luZG93JyxcbiAgICAnLS1kaXNhYmxlLWJhY2tncm91bmQtdGltZXItdGhyb3R0bGluZycsXG4gICAgJy0tZGlzYWJsZS1iYWNrZ3JvdW5kaW5nLW9jY2x1ZGVkLXdpbmRvd3MnXG5dLmpvaW4oJyAnKTtcblxuY29uc3QgQUxJQVNFUyA9IHtcbiAgICAnaWUnOiB7XG4gICAgICAgIG5hbWVSZTogL2lleHBsb3JlfGludGVybmV0IGV4cGxvcmVyL2ksXG4gICAgICAgIGNtZDogICAgJydcbiAgICB9LFxuXG4gICAgJ2ZpcmVmb3gnOiB7XG4gICAgICAgIG5hbWVSZTogICAgICAgICAgICAgL2ZpcmVmb3h8bW96aWxsYS9pLFxuICAgICAgICBjbWQ6ICAgICAgICAgICAgICAgIGAtb3ZlcnJpZGUgXCIke3BhdGguam9pbihfX2Rpcm5hbWUsICcuLi9kYXRhL292ZXJyaWRlLmluaScpfVwiIC1uZXctd2luZG93YCxcbiAgICAgICAgbWFjT3BlbkNtZFRlbXBsYXRlOiAnb3BlbiAtYSBcInt7e3BhdGh9fX1cIiB7e3twYWdlVXJsfX19IC0tYXJncyB7e3tjbWR9fX0nLFxuICAgICAgICBsaW51eEJpbmFyaWVzOiAgICAgIFsnZmlyZWZveCddXG4gICAgfSxcblxuICAgICdjaHJvbWUtY2FuYXJ5Jzoge1xuICAgICAgICBuYW1lUmU6ICAgICAgICAgICAgIC9jaHJvbWVcXHMqY2FuYXJ5L2ksXG4gICAgICAgIGNtZDogICAgICAgICAgICAgICAgY2hyb21pdW1DbWRBcmdzLFxuICAgICAgICBtYWNPcGVuQ21kVGVtcGxhdGU6ICdvcGVuIC1uIC1hIFwie3t7cGF0aH19fVwiIC0tYXJncyB7e3twYWdlVXJsfX19IHt7e2NtZH19fScsXG4gICAgICAgIGxpbnV4QmluYXJpZXM6ICAgICAgWydnb29nbGUtY2hyb21lLWNhbmFyeSddXG4gICAgfSxcblxuICAgICdjaHJvbWUnOiB7XG4gICAgICAgIG5hbWVSZTogICAgICAgICAgICAgL2Nocm9tZS9pLFxuICAgICAgICBjbWQ6ICAgICAgICAgICAgICAgIGNocm9taXVtQ21kQXJncyxcbiAgICAgICAgbWFjT3BlbkNtZFRlbXBsYXRlOiAnb3BlbiAtbiAtYSBcInt7e3BhdGh9fX1cIiAtLWFyZ3Mge3t7cGFnZVVybH19fSB7e3tjbWR9fX0nLFxuICAgICAgICBsaW51eEJpbmFyaWVzOiAgICAgIFsnZ29vZ2xlLWNocm9tZScsICdnb29nbGUtY2hyb21lLXN0YWJsZScsICdnb29nbGUtY2hyb21lLXVuc3RhYmxlJ11cbiAgICB9LFxuXG4gICAgJ2Nocm9taXVtJzoge1xuICAgICAgICBuYW1lUmU6ICAgICAgICAgICAgIC9jaHJvbWl1bS9pLFxuICAgICAgICBjbWQ6ICAgICAgICAgICAgICAgIGNocm9taXVtQ21kQXJncyxcbiAgICAgICAgbWFjT3BlbkNtZFRlbXBsYXRlOiAnb3BlbiAtbiAtYSBcInt7e3BhdGh9fX1cIiAtLWFyZ3Mge3t7cGFnZVVybH19fSB7e3tjbWR9fX0nLFxuICAgICAgICBsaW51eEJpbmFyaWVzOiAgICAgIFsnY2hyb21pdW0tYnJvd3NlcicsICdjaHJvbWl1bSddXG4gICAgfSxcblxuICAgICdvcGVyYSc6IHtcbiAgICAgICAgbmFtZVJlOiAgICAgICAgICAgICAvb3BlcmEvaSxcbiAgICAgICAgY21kOiAgICAgICAgICAgICAgICAnLS1uZXctd2luZG93JyxcbiAgICAgICAgbWFjT3BlbkNtZFRlbXBsYXRlOiAnb3BlbiAtbiAtYSBcInt7e3BhdGh9fX1cIiAtLWFyZ3Mge3t7cGFnZVVybH19fSB7e3tjbWR9fX0nLFxuICAgICAgICBsaW51eEJpbmFyaWVzOiAgICAgIFsnb3BlcmEnXVxuICAgIH0sXG5cbiAgICAnc2FmYXJpJzoge1xuICAgICAgICBuYW1lUmU6ICAgICAgICAgICAgIC9zYWZhcmkvaSxcbiAgICAgICAgY21kOiAgICAgICAgICAgICAgICAnJyxcbiAgICAgICAgcGF0aDogICAgICAgICAgICAgICBCSU5BUklFUy5hcHAsXG4gICAgICAgIG1hY09wZW5DbWRUZW1wbGF0ZTogJ29wZW4gLW4gLWEgXCJ7e3twYXRofX19XCIgLS1hcmdzIC9kZXYvbnVsbCBvcGVuIHt7e3BhZ2VVcmx9fX0ge3t7Y21kfX19J1xuICAgIH0sXG5cbiAgICAnZWRnZSc6IHtcbiAgICAgICAgbmFtZVJlOiAgICAgICAgICAgICAvZWRnZS9pLFxuICAgICAgICBjbWQ6ICAgICAgICAgICAgICAgIGVkZ2VDbWRBcmdzLFxuICAgICAgICBtYWNPcGVuQ21kVGVtcGxhdGU6ICdvcGVuIC1uIC1hIFwie3t7cGF0aH19fVwiIC0tYXJncyB7e3twYWdlVXJsfX19IHt7e2NtZH19fScsXG4gICAgICAgIGxpbnV4QmluYXJpZXM6ICAgICAgWydtaWNyb3NvZnQtZWRnZSddXG4gICAgfSxcblxuICAgICdlZGdlLWxlZ2FjeSc6IHtcbiAgICAgICAgY21kOiAgICAgICAgICAgICAgICAnJyxcbiAgICAgICAgd2luT3BlbkNtZFRlbXBsYXRlOiAnc3RhcnQgbWljcm9zb2Z0LWVkZ2U6XCJ7e3twYWdlVXJsfX19XCInXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQUxJQVNFUztcbiJdfQ==