"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    dispatchEvent: 'dispatch-event',
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    scroll: 'scroll',
    scrollBy: 'scroll-by',
    scrollIntoView: 'scroll-into-view',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    openWindow: 'open-window',
    closeWindow: 'close-window',
    getCurrentWindow: 'get-current-window',
    getCurrentWindows: 'get-current-windows',
    switchToWindow: 'switch-to-window',
    switchToWindowByPredicate: 'switch-to-window-by-predicate',
    switchToParentWindow: 'switch-to-parent-window',
    switchToPreviousWindow: 'switch-to-previous-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    getActiveElement: 'get-active-element',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    disableDebug: 'disable-debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    executeAsyncExpression: 'execute-async-expression',
    unlockPage: 'unlock-page',
    recorder: 'recorder',
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsYUFBYSxFQUFlLGdCQUFnQjtJQUM1QyxLQUFLLEVBQXVCLE9BQU87SUFDbkMsVUFBVSxFQUFrQixhQUFhO0lBQ3pDLFdBQVcsRUFBaUIsY0FBYztJQUMxQyxJQUFJLEVBQXdCLE1BQU07SUFDbEMsYUFBYSxFQUFlLGlCQUFpQjtJQUM3QyxLQUFLLEVBQXVCLE9BQU87SUFDbkMsTUFBTSxFQUFzQixRQUFRO0lBQ3BDLFFBQVEsRUFBb0IsV0FBVztJQUN2QyxjQUFjLEVBQWMsa0JBQWtCO0lBQzlDLFFBQVEsRUFBb0IsV0FBVztJQUN2QyxVQUFVLEVBQWtCLGFBQWE7SUFDekMscUJBQXFCLEVBQU8sMEJBQTBCO0lBQ3RELHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxnQkFBZ0IsRUFBWSxxQkFBcUI7SUFDakQsV0FBVyxFQUFpQixjQUFjO0lBQzFDLHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxlQUFlLEVBQWEsa0JBQWtCO0lBQzlDLGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MscUJBQXFCLEVBQU8seUJBQXlCO0lBQ3JELG9CQUFvQixFQUFRLHlCQUF5QjtJQUNyRCwwQkFBMEIsRUFBRSw4QkFBOEI7SUFDMUQsMEJBQTBCLEVBQUUsK0JBQStCO0lBQzNELDBCQUEwQixFQUFFLCtCQUErQjtJQUMzRCxhQUFhLEVBQWUsZ0JBQWdCO0lBQzVDLFlBQVksRUFBZ0IsZUFBZTtJQUMzQyx1QkFBdUIsRUFBSyw2QkFBNkI7SUFDekQsY0FBYyxFQUFjLGlCQUFpQjtJQUM3QyxjQUFjLEVBQWMsa0JBQWtCO0lBQzlDLGtCQUFrQixFQUFVLHVCQUF1QjtJQUNuRCxVQUFVLEVBQWtCLGFBQWE7SUFDekMsV0FBVyxFQUFpQixjQUFjO0lBQzFDLGdCQUFnQixFQUFZLG9CQUFvQjtJQUNoRCxpQkFBaUIsRUFBVyxxQkFBcUI7SUFDakQsY0FBYyxFQUFjLGtCQUFrQjtJQUM5Qyx5QkFBeUIsRUFBRywrQkFBK0I7SUFDM0Qsb0JBQW9CLEVBQVEseUJBQXlCO0lBQ3JELHNCQUFzQixFQUFNLDJCQUEyQjtJQUN2RCxzQkFBc0IsRUFBTSwyQkFBMkI7SUFDdkQsc0JBQXNCLEVBQU0sMkJBQTJCO0lBQ3ZELHlCQUF5QixFQUFHLDhCQUE4QjtJQUMxRCxnQkFBZ0IsRUFBWSxvQkFBb0I7SUFDaEQsWUFBWSxFQUFnQixnQkFBZ0I7SUFDNUMsa0JBQWtCLEVBQVUsdUJBQXVCO0lBQ25ELEtBQUssRUFBdUIsT0FBTztJQUNuQyxZQUFZLEVBQWdCLGVBQWU7SUFDM0MsU0FBUyxFQUFtQixXQUFXO0lBQ3ZDLE9BQU8sRUFBcUIsU0FBUztJQUNyQyxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsY0FBYyxFQUFjLGlCQUFpQjtJQUM3QyxpQkFBaUIsRUFBVyxvQkFBb0I7SUFDaEQsc0JBQXNCLEVBQU0sMEJBQTBCO0lBQ3RELFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxRQUFRLEVBQW9CLFVBQVU7Q0FDekMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFdBUk5JTkc6IHRoaXMgZmlsZSBpcyB1c2VkIGJ5IGJvdGggdGhlIGNsaWVudCBhbmQgdGhlIHNlcnZlci5cbi8vIERvIG5vdCB1c2UgYW55IGJyb3dzZXIgb3Igbm9kZS1zcGVjaWZpYyBBUEkhXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkaXNwYXRjaEV2ZW50OiAgICAgICAgICAgICAgJ2Rpc3BhdGNoLWV2ZW50JyxcbiAgICBjbGljazogICAgICAgICAgICAgICAgICAgICAgJ2NsaWNrJyxcbiAgICByaWdodENsaWNrOiAgICAgICAgICAgICAgICAgJ3JpZ2h0LWNsaWNrJyxcbiAgICBkb3VibGVDbGljazogICAgICAgICAgICAgICAgJ2RvdWJsZS1jbGljaycsXG4gICAgZHJhZzogICAgICAgICAgICAgICAgICAgICAgICdkcmFnJyxcbiAgICBkcmFnVG9FbGVtZW50OiAgICAgICAgICAgICAgJ2RyYWctdG8tZWxlbWVudCcsXG4gICAgaG92ZXI6ICAgICAgICAgICAgICAgICAgICAgICdob3ZlcicsXG4gICAgc2Nyb2xsOiAgICAgICAgICAgICAgICAgICAgICdzY3JvbGwnLFxuICAgIHNjcm9sbEJ5OiAgICAgICAgICAgICAgICAgICAnc2Nyb2xsLWJ5JyxcbiAgICBzY3JvbGxJbnRvVmlldzogICAgICAgICAgICAgJ3Njcm9sbC1pbnRvLXZpZXcnLFxuICAgIHR5cGVUZXh0OiAgICAgICAgICAgICAgICAgICAndHlwZS10ZXh0JyxcbiAgICBzZWxlY3RUZXh0OiAgICAgICAgICAgICAgICAgJ3NlbGVjdC10ZXh0JyxcbiAgICBzZWxlY3RUZXh0QXJlYUNvbnRlbnQ6ICAgICAgJ3NlbGVjdC10ZXh0LWFyZWEtY29udGVudCcsXG4gICAgc2VsZWN0RWRpdGFibGVDb250ZW50OiAgICAgICdzZWxlY3QtZWRpdGFibGUtY29udGVudCcsXG4gICAgcHJlc3NLZXk6ICAgICAgICAgICAgICAgICAgICdwcmVzcy1rZXknLFxuICAgIHdhaXQ6ICAgICAgICAgICAgICAgICAgICAgICAnd2FpdCcsXG4gICAgbmF2aWdhdGVUbzogICAgICAgICAgICAgICAgICduYXZpZ2F0ZS10bycsXG4gICAgc2V0RmlsZXNUb1VwbG9hZDogICAgICAgICAgICdzZXQtZmlsZXMtdG8tdXBsb2FkJyxcbiAgICBjbGVhclVwbG9hZDogICAgICAgICAgICAgICAgJ2NsZWFyLXVwbG9hZCcsXG4gICAgZXhlY3V0ZUNsaWVudEZ1bmN0aW9uOiAgICAgICdleGVjdXRlLWNsaWVudC1mdW5jdGlvbicsXG4gICAgZXhlY3V0ZVNlbGVjdG9yOiAgICAgICAgICAgICdleGVjdXRlLXNlbGVjdG9yJyxcbiAgICB0YWtlU2NyZWVuc2hvdDogICAgICAgICAgICAgJ3Rha2Utc2NyZWVuc2hvdCcsXG4gICAgdGFrZUVsZW1lbnRTY3JlZW5zaG90OiAgICAgICd0YWtlLWVsZW1lbnQtc2NyZWVuc2hvdCcsXG4gICAgdGFrZVNjcmVlbnNob3RPbkZhaWw6ICAgICAgICd0YWtlLXNjcmVlbnNob3Qtb24tZmFpbCcsXG4gICAgcHJlcGFyZUJyb3dzZXJNYW5pcHVsYXRpb246ICdwcmVwYXJlLWJyb3dzZXItbWFuaXB1bGF0aW9uJyxcbiAgICBzaG93QXNzZXJ0aW9uUmV0cmllc1N0YXR1czogJ3Nob3ctYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBoaWRlQXNzZXJ0aW9uUmV0cmllc1N0YXR1czogJ2hpZGUtYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBzZXRCcmVha3BvaW50OiAgICAgICAgICAgICAgJ3NldC1icmVha3BvaW50JyxcbiAgICByZXNpemVXaW5kb3c6ICAgICAgICAgICAgICAgJ3Jlc2l6ZS13aW5kb3cnLFxuICAgIHJlc2l6ZVdpbmRvd1RvRml0RGV2aWNlOiAgICAncmVzaXplLXdpbmRvdy10by1maXQtZGV2aWNlJyxcbiAgICBtYXhpbWl6ZVdpbmRvdzogICAgICAgICAgICAgJ21heGltaXplLXdpbmRvdycsXG4gICAgc3dpdGNoVG9JZnJhbWU6ICAgICAgICAgICAgICdzd2l0Y2gtdG8taWZyYW1lJyxcbiAgICBzd2l0Y2hUb01haW5XaW5kb3c6ICAgICAgICAgJ3N3aXRjaC10by1tYWluLXdpbmRvdycsXG4gICAgb3BlbldpbmRvdzogICAgICAgICAgICAgICAgICdvcGVuLXdpbmRvdycsXG4gICAgY2xvc2VXaW5kb3c6ICAgICAgICAgICAgICAgICdjbG9zZS13aW5kb3cnLFxuICAgIGdldEN1cnJlbnRXaW5kb3c6ICAgICAgICAgICAnZ2V0LWN1cnJlbnQtd2luZG93JyxcbiAgICBnZXRDdXJyZW50V2luZG93czogICAgICAgICAgJ2dldC1jdXJyZW50LXdpbmRvd3MnLFxuICAgIHN3aXRjaFRvV2luZG93OiAgICAgICAgICAgICAnc3dpdGNoLXRvLXdpbmRvdycsXG4gICAgc3dpdGNoVG9XaW5kb3dCeVByZWRpY2F0ZTogICdzd2l0Y2gtdG8td2luZG93LWJ5LXByZWRpY2F0ZScsXG4gICAgc3dpdGNoVG9QYXJlbnRXaW5kb3c6ICAgICAgICdzd2l0Y2gtdG8tcGFyZW50LXdpbmRvdycsXG4gICAgc3dpdGNoVG9QcmV2aW91c1dpbmRvdzogICAgICdzd2l0Y2gtdG8tcHJldmlvdXMtd2luZG93JyxcbiAgICBzZXROYXRpdmVEaWFsb2dIYW5kbGVyOiAgICAgJ3NldC1uYXRpdmUtZGlhbG9nLWhhbmRsZXInLFxuICAgIGdldE5hdGl2ZURpYWxvZ0hpc3Rvcnk6ICAgICAnZ2V0LW5hdGl2ZS1kaWFsb2ctaGlzdG9yeScsXG4gICAgZ2V0QnJvd3NlckNvbnNvbGVNZXNzYWdlczogICdnZXQtYnJvd3Nlci1jb25zb2xlLW1lc3NhZ2VzJyxcbiAgICBnZXRBY3RpdmVFbGVtZW50OiAgICAgICAgICAgJ2dldC1hY3RpdmUtZWxlbWVudCcsXG4gICAgc2V0VGVzdFNwZWVkOiAgICAgICAgICAgICAgICdzZXQtdGVzdC1zcGVlZCcsXG4gICAgc2V0UGFnZUxvYWRUaW1lb3V0OiAgICAgICAgICdzZXQtcGFnZS1sb2FkLXRpbWVvdXQnLFxuICAgIGRlYnVnOiAgICAgICAgICAgICAgICAgICAgICAnZGVidWcnLFxuICAgIGRpc2FibGVEZWJ1ZzogICAgICAgICAgICAgICAnZGlzYWJsZS1kZWJ1ZycsXG4gICAgYXNzZXJ0aW9uOiAgICAgICAgICAgICAgICAgICdhc3NlcnRpb24nLFxuICAgIHVzZVJvbGU6ICAgICAgICAgICAgICAgICAgICAndXNlUm9sZScsXG4gICAgdGVzdERvbmU6ICAgICAgICAgICAgICAgICAgICd0ZXN0LWRvbmUnLFxuICAgIGJhY2t1cFN0b3JhZ2VzOiAgICAgICAgICAgICAnYmFja3VwLXN0b3JhZ2VzJyxcbiAgICBleGVjdXRlRXhwcmVzc2lvbjogICAgICAgICAgJ2V4ZWN1dGUtZXhwcmVzc2lvbicsXG4gICAgZXhlY3V0ZUFzeW5jRXhwcmVzc2lvbjogICAgICdleGVjdXRlLWFzeW5jLWV4cHJlc3Npb24nLFxuICAgIHVubG9ja1BhZ2U6ICAgICAgICAgICAgICAgICAndW5sb2NrLXBhZ2UnLFxuICAgIHJlY29yZGVyOiAgICAgICAgICAgICAgICAgICAncmVjb3JkZXInLFxufTtcbiJdfQ==