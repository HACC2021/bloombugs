"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const render_template_1 = __importDefault(require("../utils/render-template"));
class WarningLog {
    constructor(globalLog = null) {
        this.globalLog = globalLog;
        this.messages = [];
    }
    addPlainMessage(msg) {
        // NOTE: avoid duplicates
        if (!this.messages.includes(msg))
            this.messages.push(msg);
    }
    addWarning(...args) {
        // @ts-ignore
        const msg = render_template_1.default.apply(null, args);
        this.addPlainMessage(msg);
        if (this.globalLog)
            this.globalLog.addPlainMessage(msg);
    }
    clear() {
        this.messages = [];
    }
    copyTo(warningLog) {
        this.messages.forEach(msg => warningLog.addWarning(msg));
    }
}
exports.default = WarningLog;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy1sb2cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbm90aWZpY2F0aW9ucy93YXJuaW5nLWxvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtFQUFzRDtBQUV0RCxNQUFxQixVQUFVO0lBSTNCLFlBQW9CLFlBQStCLElBQUk7UUFDbkQsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBSSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVNLGVBQWUsQ0FBRSxHQUFXO1FBQy9CLHlCQUF5QjtRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDO1lBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxVQUFVLENBQUUsR0FBRyxJQUFXO1FBQzdCLGFBQWE7UUFDYixNQUFNLEdBQUcsR0FBRyx5QkFBYyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUxQixJQUFJLElBQUksQ0FBQyxTQUFTO1lBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFFLFVBQXNCO1FBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7Q0FDSjtBQWhDRCw2QkFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVuZGVyVGVtcGxhdGUgZnJvbSAnLi4vdXRpbHMvcmVuZGVyLXRlbXBsYXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2FybmluZ0xvZyB7XG4gICAgcHVibGljIG1lc3NhZ2VzOiBzdHJpbmdbXTtcbiAgICBwdWJsaWMgZ2xvYmFsTG9nOiBXYXJuaW5nTG9nIHwgbnVsbDtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvciAoZ2xvYmFsTG9nOiBXYXJuaW5nTG9nIHwgbnVsbCA9IG51bGwpIHtcbiAgICAgICAgdGhpcy5nbG9iYWxMb2cgPSBnbG9iYWxMb2c7XG4gICAgICAgIHRoaXMubWVzc2FnZXMgID0gW107XG4gICAgfVxuXG4gICAgcHVibGljIGFkZFBsYWluTWVzc2FnZSAobXNnOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgLy8gTk9URTogYXZvaWQgZHVwbGljYXRlc1xuICAgICAgICBpZiAoIXRoaXMubWVzc2FnZXMuaW5jbHVkZXMobXNnKSlcbiAgICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaChtc2cpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGRXYXJuaW5nICguLi5hcmdzOiBhbnlbXSk6IHZvaWQge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGNvbnN0IG1zZyA9IHJlbmRlclRlbXBsYXRlLmFwcGx5KG51bGwsIGFyZ3MpO1xuXG4gICAgICAgIHRoaXMuYWRkUGxhaW5NZXNzYWdlKG1zZyk7XG5cbiAgICAgICAgaWYgKHRoaXMuZ2xvYmFsTG9nKVxuICAgICAgICAgICAgdGhpcy5nbG9iYWxMb2cuYWRkUGxhaW5NZXNzYWdlKG1zZyk7XG4gICAgfVxuXG4gICAgcHVibGljIGNsZWFyICgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtdO1xuICAgIH1cblxuICAgIHB1YmxpYyBjb3B5VG8gKHdhcm5pbmdMb2c6IFdhcm5pbmdMb2cpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlcy5mb3JFYWNoKG1zZyA9PiB3YXJuaW5nTG9nLmFkZFdhcm5pbmcobXNnKSk7XG4gICAgfVxufVxuIl19