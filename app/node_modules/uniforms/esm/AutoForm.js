import { __assign, __extends } from "tslib";
import clone from 'lodash/clone';
import isEqual from 'lodash/isEqual';
import omit from 'lodash/omit';
import setWith from 'lodash/setWith';
import { ValidatedQuickForm, } from './ValidatedQuickForm';
export function Auto(Base) {
    // @ts-expect-error: Mixin class problem.
    var AutoForm = /** @class */ (function (_super) {
        __extends(AutoForm, _super);
        function AutoForm(props) {
            var _this = _super.call(this, props) || this;
            _this.state = __assign(__assign({}, _this.state), { model: props.model });
            return _this;
        }
        AutoForm.prototype.componentDidUpdate = function (prevProps, prevState, snapshot) {
            var model = this.props.model;
            if (!isEqual(model, prevProps.model)) {
                this.setState({ model: model });
            }
            _super.prototype.componentDidUpdate.call(this, prevProps, prevState, snapshot);
        };
        AutoForm.prototype.getNativeFormProps = function () {
            return omit(_super.prototype.getNativeFormProps.call(this), ['onChangeModel']);
        };
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        AutoForm.prototype.getModel = function (mode) {
            return this.state.model;
        };
        AutoForm.prototype.onChange = function (key, value) {
            var _this = this;
            _super.prototype.onChange.call(this, key, value);
            this.setState(function (state) { return ({ model: setWith(clone(state.model), key, value, clone) }); }, function () {
                if (_this.props.onChangeModel) {
                    _this.props.onChangeModel(_this.state.model);
                }
            });
        };
        AutoForm.prototype.__reset = function (state) {
            return __assign(__assign({}, _super.prototype.__reset.call(this, state)), { model: this.props.model });
        };
        AutoForm.Auto = Auto;
        AutoForm.displayName = "Auto" + Base.displayName;
        return AutoForm;
    }(Base));
    return AutoForm;
}
export var AutoForm = Auto(ValidatedQuickForm);
