import { __assign, __rest } from "tslib";
import classnames from 'classnames';
import React from 'react';
import { connectField, filterDOMProps } from 'uniforms';
function LongText(_a) {
    var className = _a.className, disabled = _a.disabled, error = _a.error, errorMessage = _a.errorMessage, id = _a.id, inputRef = _a.inputRef, label = _a.label, name = _a.name, onChange = _a.onChange, placeholder = _a.placeholder, readOnly = _a.readOnly, required = _a.required, showInlineError = _a.showInlineError, value = _a.value, props = __rest(_a, ["className", "disabled", "error", "errorMessage", "id", "inputRef", "label", "name", "onChange", "placeholder", "readOnly", "required", "showInlineError", "value"]);
    return (React.createElement("div", __assign({ className: classnames(className, { disabled: disabled, error: error, required: required }, 'field') }, filterDOMProps(props)),
        label && React.createElement("label", { htmlFor: id }, label),
        React.createElement("textarea", { disabled: disabled, id: id, name: name, onChange: function (event) { return onChange(event.target.value); }, placeholder: placeholder, readOnly: readOnly, ref: inputRef, value: value !== null && value !== void 0 ? value : '' }),
        !!(error && showInlineError) && (React.createElement("div", { className: "ui red basic pointing label" }, errorMessage))));
}
export default connectField(LongText, { kind: 'leaf' });
